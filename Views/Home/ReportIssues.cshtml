@model PROG7312_POE.Models.IssueReportViewModel

@{
    ViewData["Title"] = "Report Issues";
}

<!-- Page Header -->
<div class="report-header">
    <div class="container">
        <a href="@Url.Action("Index", "Home")" class="back-link">← Back to Home</a>
        <h1 class="page-title">Report an Issue</h1>
        <p class="page-subtitle">Help us keep Cape Town beautiful and functional by reporting issues in your community.</p>
    </div>
</div>

<!-- Page Content -->
<div class="report-content">
    <div class="container">
        
        @if (Model.IsSubmitted)
        {
            <!-- Success Message -->
            <div class="alert alert-success" style="background: #d4edda; border: 1px solid #c3e6cb; color: #155724; padding: 20px; border-radius: 12px; margin-bottom: 30px;">
                <div style="display: flex; align-items: center;">
                    <span style="font-size: 2rem; margin-right: 15px;">✅</span>
                    <div>
                        <h4 style="margin: 0 0 10px 0; font-weight: 600;">Report Submitted! Thank you for helping our community.</h4>
                        <p style="margin: 0;">Your report has been successfully submitted and will be reviewed by our team.</p>
                    </div>
                </div>
            </div>
            
            <!-- Progress Bar for Completed Submission -->
            <div class="progress-section" id="progress-section">
                <div class="progress-label">Report Progress</div>
                <div class="progress-bar-container">
                    <div class="progress-bar" id="progress-bar" style="width: 100%; background-color: #4caf50;">Complete</div>
                </div>
                <div class="progress-status" id="progress-status">
                    <span>Report successfully submitted!</span>
                </div>
            </div>
            
            <div class="text-center" style="margin-bottom: 30px;">
                <a href="@Url.Action("ReportIssues", "Home")" class="btn btn-primary" style="background: #4285f4; color: white; padding: 12px 24px; border-radius: 8px; text-decoration: none; font-weight: 600;">Report Another Issue</a>
            </div>
        }

        <!-- Before You Report Section -->
        <div class="info-card">
            <h3>Before You Report</h3>
            <ul class="info-list">
                <li>Provide as much detail as possible about the location and nature of the issue</li>
                <li>Include photos or documentation if available to help us understand the problem</li>
                <li>Check if the issue has already been reported by visiting the Service Status page</li>
                <li>For emergencies, contact the appropriate emergency services directly</li>
            </ul>
        </div>

        <!-- Report Form -->
        <div class="form-card">
            <h3>Report an Issue</h3>
            <p class="subtitle">Help us improve your community by reporting issues that need attention.</p>

            @if (!Model.IsSubmitted)
            {
                <form asp-action="ReportIssues" method="post" enctype="multipart/form-data" id="reportForm">
                    @Html.AntiForgeryToken()

                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div asp-validation-summary="All" class="alert alert-danger" style="background: #f8d7da; border: 1px solid #f5c6cb; color: #721c24; padding: 15px; border-radius: 8px; margin-bottom: 25px;"></div>
                    }

                    <!-- Location Field -->
                    <div class="form-group">
                        <label asp-for="Location" class="form-label">📍 Location <span class="required">*</span></label>
                        <input asp-for="Location" class="form-control" placeholder="e.g., End of Church Street, Claremont" required />
                        <span asp-validation-for="Location" class="text-danger"></span>
                    </div>

                    <!-- Category Field -->
                    <div class="form-group">
                        <label asp-for="Category" class="form-label">Category <span class="required">*</span></label>
                        <select asp-for="Category" class="form-select" required>
                            <option value="">-- Select a Category --</option>
                            <option value="Water & Sanitation">Water & Sanitation</option>
                            <option value="Roads & Transport">Roads & Transport</option>
                            <option value="Electricity">Electricity</option>
                            <option value="Waste Management">Waste Management</option>
                            <option value="Parks & Recreation">Parks & Recreation</option>
                            <option value="Housing">Housing</option>
                            <option value="Emergency Services">Emergency Services</option>
                            <option value="Public Safety">Public Safety</option>
                            <option value="Other">Other</option>
                        </select>
                        <span asp-validation-for="Category" class="text-danger"></span>
                    </div>

                    <!-- Description Field -->
                    <div class="form-group">
                        <label asp-for="Description" class="form-label">📄 Description <span class="required">*</span></label>
                        <textarea asp-for="Description" class="form-control form-textarea" placeholder="Please provide a detailed description of the issue..." maxlength="500" oninput="updateCharacterCount(this)" required></textarea>
                        <div class="character-count" id="char-count">0/500 characters</div>
                        <span asp-validation-for="Description" class="text-danger"></span>
                    </div>

                    <!-- Media Attachment Field (File Upload) -->
                    <div class="form-group">
                        <label asp-for="MediaAttachment" class="form-label">📎 Media Attachment (Optional)</label>
                        <input asp-for="MediaAttachment" type="file" class="form-control" accept="image/*,video/*,audio/*,.pdf,.doc,.docx" />
                        <small style="color: #666; font-size: 0.9rem; margin-top: 5px; display: block;">
                            Upload photos, videos, or documents related to this issue (Max 10MB). 
                            Supported formats: Images, Videos, Audio, PDF, Word documents
                        </small>
                        <span asp-validation-for="MediaAttachment" class="text-danger"></span>
                    </div>

                    <!-- Submit Button -->
                    <button type="submit" class="btn-submit" id="submit-btn">Submit Issue Report</button>

                    <!-- Progress Bar  -->
                    <div class="progress-section" id="progress-section">
                        <div class="progress-label">Report Progress</div>
                        <div class="progress-bar-container">
                            <div class="progress-bar" id="progress-bar" style="width: 0%;">Ready to Submit</div>
                        </div>
                        <div class="progress-status" id="progress-status">
                            <span>Fill out all required fields to submit</span>
                        </div>
                    </div>
                </form>
            }
        </div>

        <!-- Information Cards Row -->
        <div class="info-cards-row">
            <!-- What Happens Next Card -->
            <div class="process-card">
                <h3>What Happens Next?</h3>
                
                <div class="process-step">
                    <div class="step-number">1</div>
                    <div class="step-content">
                        <h4>Report Received</h4>
                        <p>Your issue is logged in our system</p>
                    </div>
                </div>

                <div class="process-step">
                    <div class="step-number">2</div>
                    <div class="step-content">
                        <h4>Under Review</h4>
                        <p>Our team assesses the issue and assigns priority</p>
                    </div>
                </div>

                <div class="process-step">
                    <div class="step-number">3</div>
                    <div class="step-content">
                        <h4>In Progress</h4>
                        <p>Work begins to resolve the issue</p>
                    </div>
                </div>

                <div class="process-step">
                    <div class="step-number">4</div>
                    <div class="step-content">
                        <h4>Resolved</h4>
                        <p>Issue is completed and marked as resolved</p>
                    </div>
                </div>
            </div>

            <!-- Response Times Card -->
            <div class="process-card">
                <h3>Response Times</h3>
                
                <table class="response-table">
                    <tbody>
                        <tr>
                            <td><strong>Emergency Issues</strong></td>
                            <td class="response-time-emergency">Within 24 hours</td>
                        </tr>
                        <tr>
                            <td><strong>High Priority</strong></td>
                            <td class="response-time-high">1-3 business days</td>
                        </tr>
                        <tr>
                            <td><strong>Standard Issues</strong></td>
                            <td class="response-time-standard">3-7 business days</td>
                        </tr>
                        <tr>
                            <td><strong>Low Priority</strong></td>
                            <td class="response-time-low">1-2 weeks</td>
                        </tr>
                    </tbody>
                </table>

                <p class="response-note">
                    Response times may vary based on complexity, weather conditions, and resource availability.
                </p>
            </div>
        </div>
    </div>
</div>

<style>
    .progress-section {
        background: #f8f9fa;
        padding: 20px;
        border-radius: 12px;
        margin-top: 20px;
        border: 1px solid #e9ecef;
    }

    .progress-label {
        font-weight: 600;
        margin-bottom: 10px;
        color: #495057;
    }

    .progress-bar-container {
        background: #e9ecef;
        height: 10px;
        border-radius: 5px;
        overflow: hidden;
        margin-bottom: 10px;
    }

    .progress-bar {
        height: 100%;
        background-color: #007bff;
        border-radius: 5px;
        transition: width 0.3s ease;
        display: flex;
        align-items: center;
        justify-content: center;
        color: white;
        font-size: 0.8rem;
        font-weight: 600;
    }

    .progress-status {
        font-size: 0.9rem;
        color: #6c757d;
    }

    .required {
        color: #dc3545;
        font-weight: bold;
    }
</style>

<script>
    // Character Count Update
    function updateCharacterCount(textarea) {
        const charCount = document.getElementById('char-count');
        const currentLength = textarea.value.length;
        charCount.textContent = `${currentLength}/500 characters`;
        
        if (currentLength > 450) {
            charCount.style.color = '#ea4335';
        } else {
            charCount.style.color = '#666';
        }
    }

    // Progress Bar Update
    function updateProgress() {
        const form = document.getElementById('reportForm');
        if (!form) return;

        const progressBar = document.getElementById('progress-bar');
        const progressStatus = document.getElementById('progress-status');
        const requiredFields = form.querySelectorAll('input[required], select[required], textarea[required]');
        
        // Count filled required fields
        let filledFields = 0;
        requiredFields.forEach(field => {
            if (field.value.trim() !== '') {
                filledFields++;
            }
        });
        
        // Calculate progress percentage
        const progress = (filledFields / requiredFields.length) * 100;
        progressBar.style.width = progress + '%';
        
        if (progress === 100) {
            progressBar.textContent = 'Ready to Submit';
            progressBar.style.backgroundColor = '#28a745';
            progressStatus.textContent = 'All required fields completed. Ready to submit!';
        } else if (progress > 0) {
            progressBar.textContent = Math.round(progress) + '% Complete';
            progressBar.style.backgroundColor = '#007bff';
            progressStatus.textContent = `${filledFields} of ${requiredFields.length} required fields completed`;
        } else {
            progressBar.textContent = '';
            progressBar.style.backgroundColor = '#007bff';
            progressStatus.textContent = 'Fill out all required fields to submit';
        }
    }

    // Initialize character count and progress on page load
    document.addEventListener('DOMContentLoaded', function() {
        const textarea = document.querySelector('textarea[asp-for="Description"]');
        if (textarea) {
            updateCharacterCount(textarea);
        }

        // Add event listeners to all form fields for real-time progress updates
        const form = document.getElementById('reportForm');
        if (form) {
            const formFields = form.querySelectorAll('input, select, textarea');
            formFields.forEach(field => {
                field.addEventListener('input', updateProgress);
                field.addEventListener('change', updateProgress);
            });
            
            // Initial progress check
            updateProgress();
        }
    });
</script>